{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import express from 'express';\nimport { ApiResponse, LoginRequest, RegisterRequest } from '@trusthive/interface-types';\n\nconst app = express();\nconst port = process.env.PORT || 3000;\n\napp.use(express.json());\n\napp.get('/', (_req, res): void => {\n  const response: ApiResponse<{ service: string }> = {\n    success: true,\n    message: 'Hello World from TrustHive Auth Service!',\n    data: { service: 'auth-service' },\n    timestamp: new Date().toISOString()\n  };\n  res.json(response);\n});\n\napp.post('/login', (req, res): void => {\n  const loginRequest: LoginRequest = req.body;\n  \n  const response: ApiResponse<{ token: string }> = {\n    success: true,\n    message: 'Login endpoint (not implemented)',\n    data: { token: 'mock-token' },\n    timestamp: new Date().toISOString()\n  };\n  \n  // eslint-disable-next-line no-console\n  console.log('Login request for:', loginRequest.email);\n  res.json(response);\n});\n\napp.post('/register', (req, res): void => {\n  const registerRequest: RegisterRequest = req.body;\n  \n  const response: ApiResponse<{ userId: string }> = {\n    success: true,\n    message: 'Register endpoint (not implemented)',  \n    data: { userId: 'mock-user-id' },\n    timestamp: new Date().toISOString()\n  };\n  \n  // eslint-disable-next-line no-console\n  console.log('Register request for:', registerRequest.email);\n  res.json(response);\n});\n\napp.listen(port, (): void => {\n  // eslint-disable-next-line no-console\n  console.log(`Server is running on port ${port}`);\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qBAAoB;AAGpB,IAAM,UAAM,eAAAA,SAAQ;AACpB,IAAM,OAAO,QAAQ,IAAI,QAAQ;AAEjC,IAAI,IAAI,eAAAA,QAAQ,KAAK,CAAC;AAEtB,IAAI,IAAI,KAAK,CAAC,MAAM,QAAc;AAChC,QAAM,WAA6C;AAAA,IACjD,SAAS;AAAA,IACT,SAAS;AAAA,IACT,MAAM,EAAE,SAAS,eAAe;AAAA,IAChC,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,EACpC;AACA,MAAI,KAAK,QAAQ;AACnB,CAAC;AAED,IAAI,KAAK,UAAU,CAAC,KAAK,QAAc;AACrC,QAAM,eAA6B,IAAI;AAEvC,QAAM,WAA2C;AAAA,IAC/C,SAAS;AAAA,IACT,SAAS;AAAA,IACT,MAAM,EAAE,OAAO,aAAa;AAAA,IAC5B,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,EACpC;AAGA,UAAQ,IAAI,sBAAsB,aAAa,KAAK;AACpD,MAAI,KAAK,QAAQ;AACnB,CAAC;AAED,IAAI,KAAK,aAAa,CAAC,KAAK,QAAc;AACxC,QAAM,kBAAmC,IAAI;AAE7C,QAAM,WAA4C;AAAA,IAChD,SAAS;AAAA,IACT,SAAS;AAAA,IACT,MAAM,EAAE,QAAQ,eAAe;AAAA,IAC/B,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,EACpC;AAGA,UAAQ,IAAI,yBAAyB,gBAAgB,KAAK;AAC1D,MAAI,KAAK,QAAQ;AACnB,CAAC;AAED,IAAI,OAAO,MAAM,MAAY;AAE3B,UAAQ,IAAI,6BAA6B,IAAI,EAAE;AACjD,CAAC;",
  "names": ["express"]
}
