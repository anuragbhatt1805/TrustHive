name: Pull Request Validation

on:
  pull_request:
    branches: [ main, develop ]
    types: [ opened, synchronize, reopened ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

env:
  NODE_VERSION: '18'
  DATABASE_URL: "postgresql://postgres:12345678@localhost:5432/trusthive_test"

jobs:
  validation:
    name: Code Quality Validation
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: 12345678
          POSTGRES_USER: postgres
          POSTGRES_DB: trusthive_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Generate Prisma Client
        run: |
          cd common/prisma
          npx prisma generate
          npx prisma db push

      - name: Type checking
        run: yarn check-types

      - name: Linting
        run: yarn lint

      - name: Build packages
        run: yarn build

      - name: Check for build artifacts
        run: |
          echo "✅ Checking build artifacts..."
          ls -la auth/service/build/
          ls -la auth/lambda/build/
          ls -la common/interface/dist/
          ls -la common/prisma/dist/

      - name: Validate package integrity
        run: |
          echo "✅ Validating Lambda ZIP size..."
          LAMBDA_SIZE=$(wc -c < auth/lambda/build/auth-lambda.zip)
          echo "Lambda ZIP size: ${LAMBDA_SIZE} bytes"
          if [ $LAMBDA_SIZE -gt 10485760 ]; then  # 10MB limit
            echo "❌ Lambda ZIP is too large (>10MB)!"
            exit 1
          fi
          echo "✅ Lambda ZIP size is acceptable"

      - name: Summary
        run: |
          echo "## 🎉 Pull Request Validation Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Check | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Type Checking | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
          echo "| Linting | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
          echo "| Build | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
          echo "| Package Integrity | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🚀 **Ready to merge!**" >> $GITHUB_STEP_SUMMARY
